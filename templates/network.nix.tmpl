{{- $labels := mapToRepeatedKeyValFlag "--label" .Labels -}}
systemd.services."{{.Runtime}}-network-{{.Name}}" = {
  path = [ pkgs.{{.Runtime}} ];
  serviceConfig = {
    Type = "oneshot";
    RemainAfterExit = true;
    ExecStop = "${pkgs.{{.Runtime}}}/bin/{{.Runtime}} network rm -f {{.Name}}";
  };
  {{- if eq (.Runtime | printf "%s") "docker"}}
  script = ''
    {{.Runtime}} network inspect {{.Name}} || {{.Runtime}} network create {{.Name}}{{- if $labels}} {{ $labels | join " "}}{{- end}}
  '';
  {{- else}}
  script = ''
    {{.Runtime}} network inspect {{.Name}} || {{.Runtime}} network create {{.Name}} --opt isolate=true{{- if $labels}} {{ $labels | join " "}}{{- end}}
  '';
  {{- end}}
  {{- if .Containers}}
  before = [
    {{- range .Containers}}
    {{. | printf "%q"}}
    {{- end}}
  ];
  requiredBy = [
    {{- range .Containers}}
    {{. | printf "%q"}}
    {{- end}}
  ];
  {{- end}}
  {{- if rootTarget}}
  {{- /* PartOf for stop/restart of root, WantedBy for start of root. */}}
  partOf = [ "{{rootTarget}}.target" ];
  wantedBy = [ "{{rootTarget}}.target" ];
  {{- end}}
};