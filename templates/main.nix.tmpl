{{- $units := .Units -}}
{ pkgs, ... }:

{
  # Runtime
  virtualisation.{{.Runtime}} = {
    enable = true;
    autoPrune.enable = true;
    {{- if eq (.Runtime | printf "%s") "podman"}}
    dockerCompat = true;
    defaultNetwork.settings = {
      # Required for container networking to be able to use names.
      dns_enabled = true;
    };
    {{- end}}
  };
  virtualisation.oci-containers.backend = "{{.Runtime}}";

  {{- if .Containers}}

  # Containers
  {{- range .Containers}}
{{execTemplate "container.nix.tmpl" . | indent 2}}
  {{- end}}
  {{- end}}

  {{- if .Networks}}

  # Networks
  {{- range .Networks}}
{{execTemplate "network.nix.tmpl" . | indent 2}}
  {{- end}}
  {{- end}}

  {{- if .Volumes}}

  # Volumes
  {{- range .Volumes}}
{{execTemplate "volume.nix.tmpl" . | indent 2}}
  {{- end}}
  {{- end}}

  {{- if and .CreateRootService $units}}

  # Root service
  # When stopped, this will teardown all resources.
  systemd.services."{{.Runtime}}-compose-{{.Project.With "root"}}" = {
    path = [ pkgs.{{.Runtime}} ];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
    };
    requiredBy = [
      {{- range $units}}
      "{{.}}"
      {{- end}}
    ];
  };
  {{- end}}
}
