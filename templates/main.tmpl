{{- $runtime := .Runtime | printf "%s" -}}
{ pkgs, ... }:

{
  # Runtime
  virtualisation.{{$runtime}} = {
    enable = true;
    autoPrune.enable = true;
    {{- if eq $runtime "podman"}}
    dockerCompat = true;
    defaultNetwork.settings = {
      # Required for container networking to be able to use names.
      dns_enabled = true;
    };
    {{- end}}
  };
  virtualisation.oci-containers.backend = "{{$runtime}}";

  {{- if .Containers}}

  # Containers
  {{- range .Containers}}
{{execTemplate "container.tmpl" . | indent 2}}
  {{- end}}
  {{- end}}

  {{- if .Networks}}

  # Networks
  {{- range .Networks}}
{{execTemplate "network.tmpl" . | indent 2}}
  {{- end}}
  {{- end}}

  {{- if .Volumes}}

  # Volumes
  {{- range .Volumes}}
{{execTemplate "volume.tmpl" . | indent 2}}
  {{- end}}
  {{- end}}

  # Scripts
  up = writeShellScript "compose-{{.Project.With "up"}}.sh" ''
    echo "TODO: Create resources."
  '';
  down = writeShellScript "compose-{{.Project.With "down"}}.sh" ''
    echo "TODO: Remove resources."
  '';
}
